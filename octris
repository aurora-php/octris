#!/usr/bin/env php
<?php

/*
 * This file is part of the 'octris/octris' package.
 *
 * (c) Harald Lapp <harald@octris.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * Main application.
 *
 * @copyright   copyright (c) 2014-2018 by Harald Lapp
 * @author      Harald Lapp <harald@octris.org>
 */
/**/

if (version_compare(PHP_VERSION, '7.0.0') < 0) {
    printf(
        "%s: PHP-7.0.0 or newer is required, your version is '%s'!\n",
        basename($argv[0]),
        PHP_VERSION
    );
    exit(1);
}

if ($argc > 2 && $argv[1] == 'exec') {
    // execute bundled tool
    if (in_array($argv[2], ['compile', 'lint'])) {
        $cmd = $argv[2];

        array_unshift($argv, implode(' ', array_splice($argv, 0, 3)));

        $argc = count($argv);

        require_once(__DIR__ . '/bin/' . $cmd . '.php');
    } else {
        printf(
            "%s: unknown tool '%s'!\n",
            basename($argv[0]),
            $argv[2]
        );
        exit(1);
    }

    exit(0);
}

if (file_exists(__DIR__ . '/../../autoload.php')) {
    require_once(__DIR__ . '/../../autoload.php');
} else {
    require_once(__DIR__ . '/vendor/autoload.php');
}

require_once(__DIR__ . '/libs/Autoloader.php');

define('OCTRIS_APP_VENDOR', 'octris');
define('OCTRIS_APP_NAME', 'octris');
define('OCTRIS_APP_BASE', realpath(__DIR__));

// run application
(function() {
    $container = new \Octris\Container();
    $container->set('config', function () {
        return new \Octris\Config([__DIR__ . '/etc/config.yml', '~/.octris/octris.yml'], new \Octris\Config\Format\Yaml());
    }, \Octris\Container::ACCESS_SHARED | \Octris\Container::ACCESS_READONLY);

    $app = new \Octris\App($container);
    $app->run();
})();
